using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NUnit.Framework;
using NUnit.Framework.Internal;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Remote;

namespace selenium_training._09_RemoteLaunch
{
    [TestFixture]
    class SeleniumInClouds
    {
        //Тестовый стенд, на котором запускаются браузеры требует определенного количества мощностей.
        //Нужно инфраструктура, это должны быть не та машины, на которых работают тестировщики. Запускать браузер
        //на той машине, где кто-то работает - не очень удобно, он мешает! По этому нужны выделенные отдельные машины.
        //Контейнер в коей мере решает эту проблемму, его можно запустить где угодно и он мешать не будет, но 
        //там не менее он будет потреблять ресурсы и это тоже не очень комфортно если на одной машине работает много
        //браузеров внутри контейнеров.

        //Возникает вопрос: где брать эти мощности? С одной стороны можна покупать комьютер и выстраивать из них тестовый стенд,
        //с другой стороны - в последнее время стало популярным использовать облачные ресурсы ГДЕ МОЖНО ОРЕНДОВАТЬ РОВНО 
        //ТОЛЬКО МОЩНОСТИ, СКОЛЬКО НУЖНО И ЗАПЛАТИТЬ ТОЛЬКО ЗА ВРЕМЯ ИСПОЛЬЗОВАНИЯ.

        //Для того, чтобы получить возможность запускать браузер в облаках нужно развернуть GRID, ПРИ ЭТОМ
        //ДИСПЕТЧЕР(HUB) может находится где-угодно, его можно разметстить в локальной сети, а 
        //в облаке разместить ТОЛЬКО КОНЕЧНЫЕ УЗЛЫ, которые будут стартовать браузеры, а можно и диспетчер резместить в облаке.

        //Создание самодельного грида - не такая уж и сложная задача, это нисколько не труднее, чем создавать грид на локальных
        //машинах, ПРИЧЕМ СОВРЕМЕННЫЕ ОБЛАЧНЫЕ ПРОВАЙДЕРЫ ПРЕДОСТАВЛЯЮТ ВОЗМОЖНОСТИ ПО ЗАПУСКУ КОНТЕЙНЕРОВ (В ТОМ ЧИСЛЕ И DOCKER),
        //так что, развертывание этих DOCKER КОНТЕЙНЕРОВ В ОБЛАКЕ- СОВСЕМ ПРОСТАЯ ЗАДАЧА. Можно легко там построить нужный грид.
        //НО, этот грид НЕ БУДЕТ ОБЛАДАТЬ РАЗВИТОЙ ИНФРАСТРУКТОРОЙ: нужно собирать логи, снимать скриншоты, записывать видео, чтобы 
        //понять что там происходит. И эта инфраструктура тоже требует дополнительных вложений! Amazon Web Services - насколько
        //я понял, просто предоставляют машину, без грида

        //Нап данный момент существуют СЕРВИСЫ, которые ПРЕДОСТАВЛЯЮТ УЖЕ РАЗВЕРНУТЫЕ ГРИДЫ с РАЗВИТЫМИ ИНФРАСТРУКТУРНЫМИ
        //ВОЗМОЖНОСТЯМИ:
        //Это самые популярные, но и существую и другие сервисы тоже.
        //https://saucelabs.com/
        //https://www.browserstack.com/
        //https://testingbot.com/
        //https://www.gridlastic.com/

        //ПРИМЕР ИСПОЛЬЗОВАНИЯ ГРИДА https://www.browserstack.com/
        //Поскольку - это тот же самый GRID, но работающий где-то в облаке, для запуска тестов, нужно всего лиш установить 
        //соединение с адресом ДИСПЕТЧЕРА этого грида и указать дополнительные параметры:
        //В первую очередь - логин и пароль, т.к доступ к этому гриду конечно же защищен.
        //Так же нужно указать привильные значения платформы(OS), имени браузера и версии.
        //МОЖНО ВЫБРАТЬ ВСЕ, ЧТО УГОДНО! ЛЮБОЙ БРАУЗЕР(ЛЮБАЯ ВЕРСИЯ, ЛЮБАЯ OS B ЕЕ ВЕРСИЯ, любое разрешение экрана!)
        //Главное указать browserstack.user и browserstack.key
        private IWebDriver driver;
        [SetUp]
        public void SetUp()
        {
            var capability = new ChromeOptions().ToCapabilities() as DesiredCapabilities;
            capability.SetCapability("browser", "Chrome");
            capability.SetCapability("browser_version", "66.0");
            capability.SetCapability("os", "Windows");
            capability.SetCapability("os_version", "7");
            capability.SetCapability("resolution", "1920x1080");
            capability.SetCapability("browserstack.debug", "true"); //устанавливает, чтобы было видно логи для браузера

            //capability.SetCapability("browserName", "iPhone");
            //capability.SetCapability("device", "iPhone 7");
            //capability.SetCapability("realMobile", "true");
            //capability.SetCapability("os_version", "10.3");

            capability.SetCapability("browserstack.user", "romanborodavka1");
            capability.SetCapability("browserstack.key", "ut3s3fCgTaVWy1EAteZd");

            driver = new RemoteWebDriver( new Uri("http://hub-cloud.browserstack.com/wd/hub/"), capability);
        }

        [TearDown]
        public void Quit()
        {
            driver.Close();
            driver.Quit();
            driver.Dispose();
            driver = null;
        }

        [Test]
        public void RemoteTest()
        {
            this.driver.Url = "https://selenium2.ru/";
            driver.FindElement(By.CssSelector("div fdsfvdsfvsdfsd"));
        }

        //Это РЕАЛЬНО ОЧЕНЬ УДОБНО!
        //Именно за развернутую ИНФРАСТРУКТУРУ мы и платим, когда покупаем время у этих специализированных сервисов, А НЕ У ОБЛАЧНОГО ПРОВАЙДЕРА.

        //После того, как сессия завершена, доступно видео выполнение тестов, логи, все что угодно!
        //Все действия, которые выполнялись ЗАПРОТОКОЛИРОВАНЫ В ТЕКСТОВОМ ВИДЕ. "Неправильные" действия выделяются
        //желтым цветом на фоне "правильных".

        //ВЫГОДНО ЛИ ЭТО? Что лучше: СОДЕРЖАТЬ СВОЙ СОБСТВЕННЫЙ ГРИД или ПОЛЬЗОВАТЬСЯ УСЛУГОЙ СПЕЦИАЛИЗИРОВАННОГО СЕРВИСА?
        //1.Расходы на первоначальную подготовку, даже на развертывание грида. Нужно сформировать все нужные мне
        //контейнеры или подготовить нужные виртуальные машины. Если нужны разные операционные системы, разные версии браузеров,
        //то нужны будут много разных контейнеров, много разных виртуалок.
        //2.Расходны на разработку инфраструктуры: реализовать ПРОТОКОЛИРОВАНИЕ, собирание текстовых логов,
        //видео выполнения тестов. Все как , к примеру https://www.browserstack.com/, на сайте с функцинальной точки зрения.
        //Эти расходы можно считать одноразовыми.
        //3.Расходы на поддержку и обновление. Выходят новые версии браузеров - соответственно нужно новые контейнеры и нове виртуалки.
        //4.Расходы на аренду мощностей(покупка мощностей у облачного провайдера или же у провайдера, которые предоставляет готовый грид.)
        //Орендовать мощности у облачного провайдера, конечно дешевле, чем у провайдера, который предоставляет уже готовый грид.
    }
}
