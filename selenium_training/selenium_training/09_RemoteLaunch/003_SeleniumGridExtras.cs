using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Remote;

namespace selenium_training._09_RemoteLaunch
{
    [TestFixture]
    class SeleniumGridExtras
    {
        //Selenium Grid имеет рад определенных недостатков. Они связаны не с тем, что он плохо функционирует.
        //В нем не хватает кое-каких полезных функциональных возможностей. Предпринимаются попытки расширить Selenium Grid
        //теми возможностями, но наиболее лучшее решение реализовано в Selenium Grid Extras - это ДОПОЛНИТЕЛЬНЫЙ ВТОРОЙ АГЕНТ,
        //второй сервер, который СЛЕДИТ ЗА СЕРВЕРОМ Selenium и если у него возникают ПРОБЛЕМЫ, то он пытается их решить.
        //Какие могут быть ПРОБЛЕМЫ? 
        //1.Иногда Selenium Server работает не очень стабильно и по этому его нужно периодически ПЕРЕЗАПУСКАТЬ.
        //2.Selenium Server устаривает и его нужно периодически обновлять.
        //Именно эти две задачи в первую очередь решает Selenium Grid Extras.

        //Этот инструмент представляет собой сервер, и представляется в виде отельного jar файла, который нужно запустить.
        //Он ВНУТРИ СЕБЯ будет запускать либо Selenium Hub(диспетчер) или Selenium Node(конечный узел).
        //При этом все необходимые файлы Selenium Grid Extras загружает самостоятельно по этому чтобы развернуть HUB или NODE
        //все что нужно - это загрузить 1 jar файл - Selenium Grid Extras и его и запускать.

        //ВАЖНО!
        //Для развертывания Selenium Grid Extras для каждой роли нужно чтобы была своя директория! Почему? Потому, что Selenium Grid Extras
        //будет создавать файлы, в которых будет хранится информация о настройках
        //https://github.com/groupon/Selenium-Grid-Extras/releases

        //Начнём с HUB(ДИСПЕТЧЕРА)
        //java -jar SeleniumGridExtras-2.0.4-SNAPSHOT-jar-with-dependencies.jar
        //При запуске первый раз, Selenium Grid Extras задает много вопросов, но ответы на них сохраняет в кофигурационный файл.
        //Если нужно что-то исправить - это можно сделать напосредственно в конфигурационном файле(который Selenium Grid Extras создал сам),
        //либо все удалить и пройти через это "интервью".
        //1. 2(hub)
        //2. Указываем порт на котором будет работать НЕ Selenium Server, а Selenium Grid Extras. Используется для того, чтобы мы могли 
        //зайти браузером и посмотреть его текущее состояние. ответ - значение по умолчанию 3000.НЕ УКАЗЫВАТЬ 3000! укажи лучше 3003. Пол дня просидел из-за этого
        //3. Указываем адрес, на котором будет работаь Selenium Grid Hub указываем 192.168.0.102
        //4. Указываем порт, на котором будет работать HUB (по умолчанию 4444)
        //5. Длительность хранения логов - по умолчанию 10 дней.
        //6. Автоматический вход (хз что это, но пусть будет) Имя пользователя DRAGON И пароль
        //7. Хотим ли мы, чтобы драйверы автоматически обновлялись? Да
        //8. Для каждого драйвера выбираем 32 или 64 битную версию IE(лучше выбрать 32)
        //ПОСЛЕ ЭТОГО СЕРВЕР ДРОЛЖЕН ПОДНЯТСЯ и должны создаться все папки, как на видео - лекции

        //Теперь NODE
        //java -jar SeleniumGridExtras-2.0.4-SNAPSHOT-jar-with-dependencies.jar
        //При запуске первый раз, Selenium Grid Extras задает много вопросов, но ответы на них сохраняет в кофигурационный файл.
        //Если нужно что-то исправить - это можно сделать напосредственно в конфигурационном файле(который Selenium Grid Extras создал сам),
        //либо все удалить и пройти через это "интервью".
        //1. 1(node)
        //2. укажем 3004 т.к 3003 уже занят
        //3. Указываем адрес, где находится Hub. Указываем 192.168.0.102
        //4. Указываем порт, на котором будет работать HUB (по умолчанию 4444)
        //5. Указываем порт узла - 5555
        //6. Теперь нужно указать тип ОС , браузеров(их версии) VISTA B WIN7 с точки зрения SELENIUM не отличаются
        //7. Каждый браузер - указываем хотим чтобы на нем можно было запускать тесты или нет, если да - указываем версии браузера.
        //8. Would you like this Node to auto update browser vesrions? Здесь имеется ввиду, что Selenium Grid Extras будет автоматически
        //проверять, обновил ли я браузер на компьютере - если я поставил новую версию, то он автоматически обновит свои конфигурационные файлы.
        //9. Длительность хранения логов - по умолчанию 10 дней.
        //10. Как часто нужно перезапускать эту Nod`y. Нужно выбрать конфигурацию так, чтобы он перезапускался 1-2 раза в день и это 
        //с учетом того, что тесты ранятся часто.
        //11. Хотим ли мы, чтобы драйверы автоматически обновлялись? Да
        //12. Видео записывать или нет?
        //13. Настройка сколько видео будет хранится.
        //После этого ухел должен быть запущен.

        //КОНСОЛИ ДИСПЕТЧЕРА
        //После того, как все запустилось - можно перейти в браузер по адресу http://192.168.0.102:4444 => console и увидить, что все запустилось. Это адрес Selenium Server
        //Selenium Grid Extras запускает 3 А НЕ 5 значков браузера, но это можно поменять в настройках.
        //Есть ещё одна консоль, которая работает на порту 3000 http://192.168.0.102:3003 - это консоль Selenium Grid Extras. Там можно увидеть скриншот не окна браузера,
        //а на уровне операционной системы. Так же можно увидеть информацию (свободное место и т.д). Selenium Grid Extras пишет видео так, что
        //информация о памяти очень даже полезна.
        //КОНСОЛИ УЗЛА
        //Зайдем на консоль, которая соответствует узлу: http://192.168.0.102:5555 => console - можем увидеть сесси, которые запущены 
        //И кроме этого есть консоль http://192.168.0.102:3004, которая позволяет посмотреть значение системных свойств (Capabilities)
        //и скриншот машины НА КОТОРОЙ РАБОТАЕТ УЗЕЛ на уровне Операционной системы.

        //САМОЕ ВАЖНОЕ ДОСТОИНСТВО Selenium Grid Extras - это то, что он умеет все автоматически обновлять, 
        //ЕГО ЗАДАЧА - ПОДДЕРЖКА GRID`a В ПОСТОЯННО РАБОТАЮЩЕМ СОСТОЯНИИ: периодически перезапускает узлы, автоматически все обновляет- А ИМЕННО
        //вспомагательные файлы(драйвера), Selenium Server и даже самого себя.

        private IWebDriver driver;
        [SetUp]
        public void SetUp()
        {
            driver = new RemoteWebDriver(new Uri("http://192.168.0.102:4444/wd/hub"), new ChromeOptions().ToCapabilities());
        }

        [TearDown]
        public void Quit()
        {
            driver.Close();
            driver.Quit();
            driver.Dispose();
            driver = null;
        }

        [Test]
        public void RemoteTest()
        {
            this.driver.Url = "https://selenium2.ru/";
        }
    }
}
