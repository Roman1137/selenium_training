using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace selenium_training.Lection_7
{
    class ParticularSituations
    {
        //Интересные ситуации:

        //1.Основные ошибки:
        //Не нужно ждать элементов, которые появляются на станице не на долго(индикаторы загрузки, програсс бары и т.д)!
        //Нужно помнить о частоте сетевых запросов и при ExpectedConditions она уже 0.5 сек.
        //За это время элемент может успеть появится и пропасть.
        //Для того, чтобы определить, что операция завершилась, нужно найти "старый" элемент, который должен исчезнуть,
        //запустить операцию, подождать пока старый элемент исчезнет, а потом подождать пока появится новый элемент,
        //который является результатом операции.

        //2.Как победить Staleness?
        //Поиск элемента прямо перед его использованием.
        //Выбор подходящего момента для действия. Например - есть таблица, которая сама по себе обновляется раз в 10 секунд.
        //Я хочу получить данные с этой таблицы. Когда нужно это делать? Сразу после того, как она обновилась. Как определить
        //что таблица обновилась? Тот же прием - StalenessOf. Как только он исчез - сразу же ищем новый элемент.

        //3.Если и это не помагает(например таблицы обновляются в произвольное время)- нужно ВЫПОЛНЯТЬ ПОВТОРНЫЕ ПОПЫТКИ.
        //Например: можно написать свой метод, который кликает(или выполняет другое действие) 2 раза. Первый раз - если все ок,
        //то выходим из метода, если StaleElementRefferance Expection - то пробуем еще раз искать элемент и сделать то же действие.

        //4.Способ выполнения метода 2 раза можно применить не только к ситуации со StaleElementRefferance Expection.
        //Например этот метод можна использовать для взаимодействия с элементом, который время от времени оказывается
        //накрыт каким-то другим элементом.
    }
}
