using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace selenium_training.Lection_6
{
    class _002_SendKeys
    {
        //Команда называется ИМЕННО SendKeys => отправить нажатие клавиш.
        //Selenium умеет симулировать работу не только с тектом, а С ЛЮБОЙ КЛАВИШЕЙ НА КЛАВИАТУРЕ.

        //Напрмер:
        //Enter/Return/Tab    searchField.SendKeys("selenium" + Keys.Enter);
        //Иногда пользователь хочет ввести текст не в конец поля ввода, а в середнину(нужно будет использовать стрелочки)(Home, End, PageUp, PageDown)
        //Модификаторы - бывает нужно что-то делать и удерживать клавиши (например Alt, Shift, Ctrl, Command).
        //В итоге, Seelnium может симулировать все что угодно!

        //Когда нельзя "печатать"?
        //1.Элемент исчез из DOM
        //2.Элемент "неинтерактивный".
        //3.Элемент невидимый(упрощенный вариант). (Бывает, но очень радко, что человек может водить значения в невидимые поля.Текста видно не будет, но он будет введен.
        //4.В отличии от Click, в элемент, закрытый другим элементом можно ввести текст.
        //Нужно нажать клавишу Tab и поле получить фокус и омжно будет вводить текст.(На видео есть пример).
        //Tab - чтобы сфокусироваться на поле ввида и еще раз  нажать - чтобы вывести из поля ввода. В значении value будет виден тектс, который вводился из клавиатуры.
        //Т.Е КЛИКАТЬ ПО ТАКИМ ЭЛЕМЕНТАМ НЕЛЬЗЯ, А ТЕКСТ ВВОДИТЬ МОЖНО И SELENIUM ПОЗВОЛЯЕТ ЭТО ДЕЛАТЬ.

        //В Chrome - интерактивный элемент тот, который может получить фокус. В других браузерах - не так. Там все равно может он получить фокус или не может.

        //Как печатает Selenium?
        //1.Сначала надо поставить фокус.(Если в Chrome элемент не получил фокус - driver дальше не пойдет. А у других браузерх нет такого ограничения)
        //2.Курсор в конец существующего текста. SendKeys не удаляет значения, что уже есть в поле ввода. Она пытается ввести новые значения в дополнение к старым.
        // если в поле есть маска -- надо перед вводом текста перейти в начало //dateField.SendKeys(Keys.Home + "01.01.2001");
        //3.Посимвольный ввод  и не просто ввод. Seelnium симулирует ВСЕ СОБЫТИЯ, которые порождаются при реальном вводе клавиш. keyDown, keyUp, keyPress
        //очень важно симулировать эти действия т.к разработчики могут навесить какуе-то проверку или обработчики на эти события. 
        //НАПРИМЕР на keyDown может быть проверка, является ли символ допустимым. Если нет - то он в поле ввода даже не появляется.
        //keyUp - может реализовываться подгрузка данных из сервера, чтобы реализовать механизм автопродолжения (AJAX запросы).
        //ИЗ-ЗА ЭТОГО SELENIUM ВВОДИТ ТЕКСТ ОЧЕНЬ МЕДЛЕННО.
        //Если не хочется ждать, то Ctr+A, Ctr+C, Ctr+V

        //SendKeys может работать с файловыми полями ввода.
        //Для этого нужно файловому полю ввода отправить в качестве полный путь к тому файлу, который нужно отправить на сервер.
        //Но с этим полем ввода нельзщя работтаь как с обычным полем ввода (Tab, стрелочки) и нельзя использовать Clear!

    }
}
